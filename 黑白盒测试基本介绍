笔记： https://blog.csdn.net/tianlin151/article/details/115665358

针对代码逻辑测试，代码覆盖率高，但覆盖代码路径难度大，业务功能可能覆盖不全，测试开销大
一般配合黑盒测试使用，针对复杂逻辑业务采用白盒测试，确保代码逻辑覆盖完全

问题：

白盒测试方法的概念及应用场景
白盒测试方法
用各种逻辑覆盖法来和设计白盒测试用例
使用基本路径法来设计白盒测试用例
内容：

白盒测试的基本介绍
白盒测试用例设计方法
静态设计方法
动态设计方法

根据测试阶段分层测试：
LLT（Low Level Test）：LLT关注面向对象语言中的类或类的集合，以及微服务内部及外部接口，LLT更关注微服务内部
HLT（High Level Test）：HLT关注是微服务、组件之间的接口，比如API接口测试，HLT关注接口功能
SIT：SIT关注多个微服务组成的解决方案/产品的用户行为和场景

黑盒测试：把产品当成一个黑盒，测试整体产品的功能，而不需要关注软件产品的内部结构和处理过程
         包含：等价类分析、决策表分析、边界值分析、状态转换测试
         
白盒测试的依据其实不是代码而是设计文档：
        白盒测试是针对需求的测试，如果针对代码进行测试，用例会跟代码一起出错
        也需要针对代码写补充用例
        白盒测试先从代码分析入手，根据代码逻辑规则、语句执行情况，选用适合的覆盖方法
   
